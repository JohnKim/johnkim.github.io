{"version":3,"file":"component---src-templates-main-template-tsx-3c3798d43626c9ed3feb.js","mappings":"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","sources":["webpack://blog/./src/components/blog/blog-list-item.tsx","webpack://blog/./src/components/blog/blog-list.tsx","webpack://blog/./src/components/blog/item-tags.tsx","webpack://blog/./src/utils/styles/styles.ts","webpack://blog/./src/templates/main_template.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { Fragment } from 'react'\nimport { jsx, Box, useColorMode, get } from 'theme-ui'\nimport { Link } from 'gatsby'\nimport ItemTags from 'components/blog/item-tags'\nimport { hoverUnderlineAnimation } from 'utils/styles/styles'\n\ntype BlogListItemProps = {\n  post: PostType\n}\n\nconst BlogListItem = ({ post }: BlogListItemProps) => {\n  const [colorMode] = useColorMode()\n  const hoverColor = colorMode === `dark` ? 'colors.secondary' : 'colors.primary'\n\n  return (\n    <Box mb={4}>\n      <Link\n        to={`${post.slug}`}\n        sx={t => ({\n          textDecoration: 'none',\n          fontSize: [2, 3, 4],\n          color: `text`,\n          //verticalAlign: `top`,\n\n          backgroundImage: `linear-gradient(transparent 40%, ${get(t, hoverColor)} 40%)`,\n          backgroundSize: `auto 180%`,\n          transition: `background 0.1s ease-in-out`,\n\n          '&:hover': {\n            backgroundPositionY: `100%`,\n            color: `heading`,\n          },\n        })}\n      >\n        {post.title}\n        {post.description && <p sx={{ my: 2, fontSize: [1, 1, 2] }}>{post.description}</p>}\n      </Link>\n\n      <p sx={{ color: `onSurface`, mt: 1, fontSize: [1, 1, 2] }}>\n        <time>{post.date}</time>\n      </p>\n      {post.tags && (\n        <Fragment>\n          <ItemTags tags={post.tags} />\n        </Fragment>\n      )}\n    </Box>\n  )\n}\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport BlogListItem from './blog-list-item'\n\ntype BlogListProps = {\n  posts: PostType[]\n  className?: string\n}\n\nconst BlogList = ({ posts, className = `` }: BlogListProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map(post => (\n      <BlogListItem key={post.slug} post={post} />\n    ))}\n  </section>\n)\n\nexport default BlogList\n","/** @jsx jsx */\nimport { Badge, jsx } from 'theme-ui'\nimport { Fragment } from 'react'\nimport { Link } from 'gatsby'\n\ntype TagsProps = {\n  tags: TagType[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  return (\n    <Fragment>\n      {tags &&\n        tags.map(\n          (tag, i) =>\n            tag && (\n              <Fragment key={tag.slug}>\n                {!!i && ` `}\n                <Link sx={t => ({ ...t.styles?.a })} to={`/tags/${tag.slug}`}>\n                  <Badge\n                    sx={{\n                      px: 3,\n                      py: 1,\n                      mr: 2,\n                      fontSize: 2,\n                      backgroundColor: 'secondary',\n                      letterSpacing: `0.003em`,\n                      borderRadius: `8px`,\n                    }}\n                  >\n                    {tag.name}\n                  </Badge>\n                </Link>\n              </Fragment>\n            ),\n        )}\n    </Fragment>\n  )\n}\n\nexport default ItemTags\n","import type { ThemeUICSSObject } from 'theme-ui'\n\nexport const visuallyHidden: ThemeUICSSObject = {\n  // include `px` so we can use it with `sx`\n  border: 0,\n  clip: `rect(0, 0, 0, 0)`,\n  height: `1px`,\n  margin: `-1px`,\n  overflow: `hidden`,\n  padding: 0,\n  position: `absolute`,\n  whiteSpace: `nowrap`,\n  width: `1px`,\n}\n\nexport const hoverUnderlineAnimation: ThemeUICSSObject = {\n  display: `inline-block`,\n  position: `relative`,\n  color: `#0087ca`,\n\n  '&:hover': {\n    //content: ``,\n    position: `absolute`,\n    width: `100%`,\n    transform: `scaleX(0)`,\n    height: `2px`,\n    bottom: 0,\n    left: 0,\n    backgroundColor: `#0087ca`,\n    transformOrigin: `bottom right`,\n    transition: `transform 0.25s ease-out`,\n  },\n\n  ':hover:after': {\n    transform: `scaleX(1)`,\n    transformOrigin: `bottom left`,\n  },\n}\n","/** @jsx jsx */\nimport * as React from 'react'\nimport { Box, Container, Flex, Heading, jsx } from 'theme-ui'\nimport { graphql, HeadFC, Link, PageProps } from 'gatsby'\nimport { SEO } from 'components/common/seo'\nimport useSiteMetadata from 'hooks/use-site-metadata'\nimport Layout from 'components/common/layout'\nimport { visuallyHidden } from 'utils/styles/styles'\nimport Title from 'components/common/title'\nimport BlogList from 'components/blog/blog-list'\n\ntype MainTemplateProps = {\n  allMdx: { nodes: PostType[] }\n}\n\nconst MainTemplate = ({\n  data: {\n    allMdx: { nodes },\n  },\n}: PageProps<MainTemplateProps>) => {\n  const { title } = useSiteMetadata()\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{title}</h1>\n      <Box\n        sx={{\n          p: [3, 4, 5],\n          textAlign: 'center',\n          bg: 'muted',\n          mb: [4],\n        }}\n      >\n        <div sx={{ fontWeight: `bold`, fontSize: [5, 7] }}>{title}</div>\n        <div\n          sx={{ fontWeight: `bold`, fontSize: [1, 3, 5] }}\n        >{`\" 그럼에도 불구하고, 코드로 말하는 개발 Blog \"`}</div>\n        <div\n          sx={{ fontWeight: `light`, fontSize: [1, 2, 3] }}\n        >{`Front-end, Back-end, Machine Learning, S/W Architecture`}</div>\n      </Box>\n\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading variant=\"styles.h3\" sx={{ marginY: 4 }}>\n          최근 블로그 목록\n        </Heading>\n        <Link sx={t => ({ ...t.styles?.a, color: `onSurface`, marginY: 2 })} to={`/blog`}>\n          전체 목록 보기\n        </Link>\n      </Flex>\n      <BlogList posts={nodes} />\n    </Layout>\n  )\n}\n\nexport default MainTemplate\n\nexport const Head: HeadFC<MainTemplateProps> = props => <SEO />\n\nexport const query = graphql`\n  query {\n    allMdx(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: { source: { eq: \"blog-posts\" }, defer: { eq: false } }\n    ) {\n      nodes {\n        slug\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n"],"names":["post","hoverColor","useColorMode","jsx","Box","mb","Link","to","slug","sx","t","textDecoration","fontSize","color","backgroundImage","get","backgroundSize","transition","backgroundPositionY","title","description","my","mt","date","tags","Fragment","ItemTags","posts","className","map","BlogListItem","key","tag","i","styles","_t$styles","a","Badge","px","py","mr","backgroundColor","letterSpacing","borderRadius","name","visuallyHidden","border","clip","height","margin","overflow","padding","position","whiteSpace","width","nodes","data","allMdx","useSiteMetadata","Layout","p","textAlign","bg","fontWeight","Flex","alignItems","justifyContent","flexFlow","Heading","variant","marginY","BlogList","Head","props","SEO"],"sourceRoot":""}