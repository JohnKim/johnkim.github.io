{"version":3,"file":"component---src-templates-main-template-tsx-cc9619260fd34d3f74b6.js","mappings":"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","sources":["webpack://blog/./src/components/blog/blog-list-item.tsx","webpack://blog/./src/components/blog/blog-list.tsx","webpack://blog/./src/components/blog/item-tags.tsx","webpack://blog/./src/components/common/seo.tsx","webpack://blog/./src/utils/styles/styles.ts","webpack://blog/./src/templates/main_template.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { Fragment } from 'react'\nimport { jsx, Box, useColorMode, get } from 'theme-ui'\nimport { Link } from 'gatsby'\nimport ItemTags from 'components/blog/item-tags'\nimport { hoverUnderlineAnimation } from 'utils/styles/styles'\n\ntype BlogListItemProps = {\n  post: PostType\n}\n\nconst BlogListItem = ({ post }: BlogListItemProps) => {\n  const [colorMode] = useColorMode()\n  const hoverColor = colorMode === `dark` ? 'colors.secondary' : 'colors.primary'\n\n  return (\n    <Box mb={4}>\n      <Link\n        to={`${post.slug}`}\n        sx={t => ({\n          textDecoration: 'none',\n          fontSize: [2, 3, 4],\n          color: `text`,\n          //verticalAlign: `top`,\n\n          backgroundImage: `linear-gradient(transparent 40%, ${get(t, hoverColor)} 40%)`,\n          backgroundSize: `auto 180%`,\n          transition: `background 0.1s ease-in-out`,\n\n          '&:hover': {\n            backgroundPositionY: `100%`,\n            color: `heading`,\n          },\n        })}\n      >\n        {post.title}\n        {post.description && <p sx={{ my: 2, fontSize: [1, 1, 2] }}>{post.description}</p>}\n      </Link>\n\n      <p sx={{ color: `onSurface`, mt: 1, fontSize: [1, 1, 2] }}>\n        <time>{post.date}</time>\n      </p>\n      {post.tags && (\n        <Fragment>\n          <ItemTags tags={post.tags} />\n        </Fragment>\n      )}\n    </Box>\n  )\n}\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport BlogListItem from './blog-list-item'\n\ntype BlogListProps = {\n  posts: PostType[]\n  className?: string\n}\n\nconst BlogList = ({ posts, className = `` }: BlogListProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map(post => (\n      <BlogListItem key={post.slug} post={post} />\n    ))}\n  </section>\n)\n\nexport default BlogList\n","/** @jsx jsx */\nimport { Badge, jsx } from 'theme-ui'\nimport { Fragment } from 'react'\nimport { Link } from 'gatsby'\n\ntype TagsProps = {\n  tags: TagType[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  return (\n    <Fragment>\n      {tags &&\n        tags.map(\n          (tag, i) =>\n            tag && (\n              <Fragment key={tag.slug}>\n                {!!i && ` `}\n                <Link sx={t => ({ ...t.styles?.a })} to={`/tags/${tag.slug}`}>\n                  <Badge\n                    sx={{\n                      px: 3,\n                      py: 1,\n                      mr: 2,\n                      fontSize: 2,\n                      backgroundColor: 'secondary',\n                      letterSpacing: `0.003em`,\n                      borderRadius: `8px`,\n                    }}\n                  >\n                    {tag.name}\n                  </Badge>\n                </Link>\n              </Fragment>\n            ),\n        )}\n    </Fragment>\n  )\n}\n\nexport default ItemTags\n","import React from 'react'\nimport useSiteMetadata from 'hooks/use-site-metadata'\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n}\n\nexport const SEO: React.FC<React.PropsWithChildren<SEOProps>> = ({ title, pathname, children }) => {\n  const { title: defaultTitle, siteUrl } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    url: `${siteUrl}${pathname || ``}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <link\n        id=\"favicon-icon\"\n        rel=\"icon\"\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>üë§</text></svg>\"\n      />\n      {children}\n    </>\n  )\n}\n","import type { ThemeUICSSObject } from 'theme-ui'\n\nexport const visuallyHidden: ThemeUICSSObject = {\n  // include `px` so we can use it with `sx`\n  border: 0,\n  clip: `rect(0, 0, 0, 0)`,\n  height: `1px`,\n  margin: `-1px`,\n  overflow: `hidden`,\n  padding: 0,\n  position: `absolute`,\n  whiteSpace: `nowrap`,\n  width: `1px`,\n}\n\nexport const hoverUnderlineAnimation: ThemeUICSSObject = {\n  display: `inline-block`,\n  position: `relative`,\n  color: `#0087ca`,\n\n  '&:hover': {\n    //content: ``,\n    position: `absolute`,\n    width: `100%`,\n    transform: `scaleX(0)`,\n    height: `2px`,\n    bottom: 0,\n    left: 0,\n    backgroundColor: `#0087ca`,\n    transformOrigin: `bottom right`,\n    transition: `transform 0.25s ease-out`,\n  },\n\n  ':hover:after': {\n    transform: `scaleX(1)`,\n    transformOrigin: `bottom left`,\n  },\n}\n","/** @jsx jsx */\nimport * as React from 'react'\nimport { Box, Container, Flex, Heading, jsx } from 'theme-ui'\nimport { graphql, HeadFC, Link, PageProps } from 'gatsby'\nimport { SEO } from 'components/common/seo'\nimport useSiteMetadata from 'hooks/use-site-metadata'\nimport Layout from 'components/common/layout'\nimport { visuallyHidden } from 'utils/styles/styles'\nimport Title from 'components/common/title'\nimport BlogList from 'components/blog/blog-list'\n\ntype MainTemplateProps = {\n  allMdx: { nodes: PostType[] }\n}\n\nconst MainTemplate = ({\n  data: {\n    allMdx: { nodes },\n  },\n}: PageProps<MainTemplateProps>) => {\n  const { title } = useSiteMetadata()\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{title}</h1>\n      <Box\n        sx={{\n          p: [3, 4, 5],\n          textAlign: 'center',\n          bg: 'muted',\n          mb: [4],\n        }}\n      >\n        <div sx={{ fontWeight: `bold`, fontSize: [5, 7] }}>{title}</div>\n        <div\n          sx={{ fontWeight: `bold`, fontSize: [1, 3, 5] }}\n        >{`\" Í∑∏ÎüºÏóêÎèÑ Î∂àÍµ¨ÌïòÍ≥†, ÏΩîÎìúÎ°ú ÎßêÌïòÎäî Í∞úÎ∞ú Blog \"`}</div>\n        <div\n          sx={{ fontWeight: `light`, fontSize: [1, 2, 3] }}\n        >{`Front-end, Back-end, Machine Learning, S/W Architecture`}</div>\n      </Box>\n\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading variant=\"styles.h3\" sx={{ marginY: 4 }}>\n          ÏµúÍ∑º Î∏îÎ°úÍ∑∏ Î™©Î°ù\n        </Heading>\n        <Link sx={t => ({ ...t.styles?.a, color: `onSurface`, marginY: 2 })} to={`/blog`}>\n          Ï†ÑÏ≤¥ Î™©Î°ù Î≥¥Í∏∞\n        </Link>\n      </Flex>\n      <BlogList posts={nodes} />\n    </Layout>\n  )\n}\n\nexport default MainTemplate\n\nexport const Head: HeadFC<MainTemplateProps> = props => <SEO />\n\nexport const query = graphql`\n  query {\n    allMdx(\n      sort: { fields: date, order: DESC }\n      limit: 3\n      filter: { source: { eq: \"blog-posts\" } }\n    ) {\n      nodes {\n        slug\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n"],"names":["post","hoverColor","useColorMode","jsx","Box","mb","Link","to","slug","sx","t","textDecoration","fontSize","color","backgroundImage","get","backgroundSize","transition","backgroundPositionY","title","description","my","mt","date","tags","Fragment","ItemTags","posts","className","map","BlogListItem","key","tag","i","styles","_t$styles","a","Badge","px","py","mr","backgroundColor","letterSpacing","borderRadius","name","SEO","pathname","children","useSiteMetadata","defaultTitle","seo","url","siteUrl","React","content","id","rel","href","visuallyHidden","border","clip","height","margin","overflow","padding","position","whiteSpace","width","nodes","data","allMdx","Layout","p","textAlign","bg","fontWeight","Flex","alignItems","justifyContent","flexFlow","Heading","variant","marginY","BlogList","Head","props"],"sourceRoot":""}